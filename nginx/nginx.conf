# Define o servidor upstream para a API, facilitando a referência
upstream api_server {
    # 'api' é o nome do serviço definido no docker-compose.yml
    server api:5000;
}

server {
    listen 80;
    server_name neurod.com.br www.neurod.com.br;

    # Redireciona todo o tráfego HTTP para HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name neurod.com.br www.neurod.com.br;

    # Caminhos para os certificados DENTRO do container (mapeados pelo docker-compose)
    ssl_certificate /etc/ssl/certs/fullchain.pem;
    ssl_certificate_key /etc/ssl/private/privkey.pem;

    # Configurações de segurança SSL recomendadas
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # Corrigido: Captura qualquer chamada de API que contenha /backend/
    # Isso resolve o problema de chamadas como /app/backend/... e /app/cadastro-questionario/backend/...
    location ~ /backend/ {
        rewrite .*(/backend/.*)$ $1 break;

        # --- INÍCIO DA CONFIGURAÇÃO DE CORS ---
        # Permite requisições de qualquer origem. Para mais segurança em produção,
        # troque '*' pelo seu domínio do frontend (ex: 'https://neurod.com.br').
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, DNT, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range' always;

        # Lida com a requisição de "preflight" OPTIONS do navegador
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        # --- FIM DA CONFIGURAÇÃO DE CORS ---

        proxy_pass http://api_server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /app/ {
        alias /usr/share/nginx/html/app/;
        try_files $uri $uri/ /app/index.html;
    }

    location / {
        root /usr/share/nginx/html/public;
        index index.html;
        # Tenta servir o arquivo diretamente. Se não encontrar, retorna 404.
        try_files $uri $uri/ =404;
    }
}